// <auto-generated />
using System;
using Infrastruktura.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Infrastruktura.Migrations
{
    [DbContext(typeof(ZamestnanciContext))]
    partial class ZamestnanciContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.15")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Infrastruktura.Models.Pozicie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nazov")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PozicieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PozicieId");

                    b.ToTable("Pozicie");
                });

            modelBuilder.Entity("Infrastruktura.Models.Predoslepozicie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumNastupu")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumUkoncenia")
                        .HasColumnType("datetime2");

                    b.Property<string>("idPozicie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("idZamestnanca")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("idZamestnanca");

                    b.ToTable("Predoslepozicie");
                });

            modelBuilder.Entity("Infrastruktura.Models.Zamestnanci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adresa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Archivovany")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DatumNarodenia")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatumNastupu")
                        .HasColumnType("datetime2");

                    b.Property<string>("Meno")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Plat")
                        .HasColumnType("real");

                    b.Property<string>("Priezvisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ZamestnanciId")
                        .HasColumnType("int");

                    b.Property<int>("idPozicie")
                        .HasColumnType("int");

                    b.Property<int?>("pozicieId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZamestnanciId");

                    b.HasIndex("idPozicie");

                    b.HasIndex("pozicieId");

                    b.ToTable("Zamestnanci");
                });

            modelBuilder.Entity("Infrastruktura.Models.Pozicie", b =>
                {
                    b.HasOne("Infrastruktura.Models.Pozicie", null)
                        .WithMany("PozicieList")
                        .HasForeignKey("PozicieId");
                });

            modelBuilder.Entity("Infrastruktura.Models.Predoslepozicie", b =>
                {
                    b.HasOne("Infrastruktura.Models.Zamestnanci", "Zamestnanci")
                        .WithMany()
                        .HasForeignKey("idZamestnanca")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Zamestnanci");
                });

            modelBuilder.Entity("Infrastruktura.Models.Zamestnanci", b =>
                {
                    b.HasOne("Infrastruktura.Models.Zamestnanci", null)
                        .WithMany("ZamestnanciList")
                        .HasForeignKey("ZamestnanciId");

                    b.HasOne("Infrastruktura.Models.Pozicie", "Pozicie")
                        .WithMany()
                        .HasForeignKey("idPozicie")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Infrastruktura.Models.Pozicie", "pozicie")
                        .WithMany()
                        .HasForeignKey("pozicieId");

                    b.Navigation("pozicie");

                    b.Navigation("Pozicie");
                });

            modelBuilder.Entity("Infrastruktura.Models.Pozicie", b =>
                {
                    b.Navigation("PozicieList");
                });

            modelBuilder.Entity("Infrastruktura.Models.Zamestnanci", b =>
                {
                    b.Navigation("ZamestnanciList");
                });
#pragma warning restore 612, 618
        }
    }
}
